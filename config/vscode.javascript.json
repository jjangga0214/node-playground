{
  // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Arrow function": {
    "prefix": "af",
    "body": [
      "($1) => {",
      "    $2",
      "}",
    ],
    "description": "anonymous arrow function"
  },
  "Async arrow function": {
    "prefix": "afa",
    "body": [
      "async ($1) => {",
      "    $2",
      "}",
    ],
    "description": "async anonymous arrow function"
  },
  "Print to console": {
    "prefix": "co",
    "body": [
      "console.log($1);",
    ],
    "description": "Log output to console"
  },
  "IIFE(Immediately Invoked Function Expression)": {
    "prefix": "ii",
    "body": [
      "(($1) => {",
      "    $3",
      "})($2);",
    ],
    "description": "IIFE"
  },
  "Async IIFE(Immediately Invoked Function Expression)": {
    "prefix": "iia",
    "body": [
      "(async ($1) => {",
      "    $3",
      "})($2);",
    ],
    "description": "Async IIFE"
  },
  "try catch": {
    "prefix": "tr",
    "body": [
      "try {",
      "    $1",
      "} catch (err) {",
      "    console.log(err);",
      "}",
    ],
    "description": "try catch block with console.log(err)"
  },
  "for await": {
    "prefix": ["fora", "itera"],
    "body": [
      "for await (const ${2:val} of ${1:promises}) {",
      "    $3",
      "}",
    ],
    "description": "try catch block with console.log(err); 'itera' is for jetbrains compatability"
  },
  "module.exports": {
    "prefix": "me",
    "body": [
      "module.exports = {",
      "    $1",
      "}",
    ],
    "description": "module.exports = {}"
  },
  "export default": {
    "prefix": "ed",
    "body": [
      "export default {",
      "    $1",
      "}",
    ],
    "description": "export default {}"
  },
  "import {} from module ": {
    "prefix": "im",
    "body": [
      "import {$2} from ${1:module};",
      "$3",
    ],
    "description": "import {} from module"
  },
  "import module": {
    "prefix": "imm",
    "body": [
      "import ${2:module} from ${1:module};",
      "$3",
    ],
    "description": "import module from module"
  }
}
